@using Microsoft.AspNetCore.SignalR.Client
@page "/counter"
@rendermode InteractiveAuto
@implements IAsyncDisposable

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @_currentCount</p>
<p role="status">Current Background Job count: @_currentBackgroundJobCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int _currentCount = 0;
    private int _currentBackgroundJobCount = 0;
    private HubConnection? _hubConnection;
    private readonly List<string> _messages = new();

    private void IncrementCount() => _currentCount++;

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl("https://localhost:7003/test-notifications")
            .Build();

        _hubConnection.On<string>("ReceiveNotification", message =>
        {
            _messages.Add(message);
            _currentBackgroundJobCount = int.Parse(message);
            InvokeAsync(StateHasChanged);
        });

        await _hubConnection.StartAsync();
        await base.OnInitializedAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (_hubConnection is not null) await _hubConnection.DisposeAsync();
    }
}
