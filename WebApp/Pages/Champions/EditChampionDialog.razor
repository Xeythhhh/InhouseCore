@using SharedKernel.Contracts.v1.Champions
@inject HttpClient HttpClient
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        Edit
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="Name" Label="Name" Variant="Variant.Filled" Disabled></MudTextField>
        <MudTextField @bind-Value="Role" Label="Role" Variant="Variant.Filled" Disabled></MudTextField>
        @foreach (var restriction in Restrictions ?? new List<ChampionRestrictionDto>())
        {
            <MudCard>
                <MudTextField @bind-Value="restriction.Name" Label="Name" Variant="Variant.Filled"></MudTextField>
                <MudTextField @bind-Value="restriction.Identifier" Label="Identifier" Variant="Variant.Filled"></MudTextField>
                <MudTextField @bind-Value="restriction.Reason" Label="Reason" Variant="Variant.Filled"></MudTextField>
                <MudIconButton @ref="SaveButton" OnClick="(e) => SaveRestriction(restriction)" Disabled>Save</MudIconButton>
                <MudIconButton OnClick="(e) => RemoveRestriction(restriction)">Remove</MudIconButton>
            </MudCard>
        }
        <MudButton OnClick="AddRestriction">Add Restriction</MudButton>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="() => MudDialog.Close()">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    private MudIconButton SaveButton { get; set; }

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public string Name { get; set; }

    [Parameter]
    public string Role { get; set; }

    [Parameter]
    public List<ChampionRestrictionDto>? Restrictions { get; set; }

    private void AddRestriction()
    {
        Snackbar.Add("Not implemented", Severity.Error);
    }

    private void RemoveRestriction(ChampionRestrictionDto restriction)
    {
        Snackbar.Add("Not implemented", Severity.Error);
    }

    private void SaveRestriction(ChampionRestrictionDto restriction)
    {
        Snackbar.Add("Not implemented", Severity.Error);
    }

    private void EnableSaveButton()
    {
        Snackbar.Add("Not implemented", Severity.Error);
    }
}